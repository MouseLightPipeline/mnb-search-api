# https://taskfile.dev

version: '3'

vars:
  REPOSITORY: mouselightdatabrowser
  IMAGE: search-api
  REPOIMAGE: "{{.REPOSITORY}}/{{.IMAGE}}"
  VERSION:
    sh: jq -r .version package.json
  MAJOR:
    sh: bash -c 'string={{.VERSION}} && arr=(${string//"."/ }) && echo ${arr[0]}'
  MINOR:
    sh: bash -c 'string={{.VERSION}} && arr=(${string//"."/ }) && echo ${arr[1]}'
  REVISION:
    sh: bash -c 'string={{.VERSION}} && arr=(${string//"."/ }) && echo ${arr[2]}'
  IMAGEWITHVERSION: "{{.REPOIMAGE}}:{{.MAJOR}}"
  IMAGEWITHMINORVERSION: "{{.IMAGEWITHVERSION}}.{{.MINOR}}"
  IMAGEWITHREVERSION: "{{.IMAGEWITHMINORVERSION}}.{{.REVISION}}"
  IMAGELATEST: "{{.REPOIMAGE}}:latest"

tasks:
  clean:
    cmds:
      - rm -rf dist
  compile:
    cmds:
      - task: clean
      - tsc -p tsconfig.prod.json
  build:
    cmds:
      - task: compile
      - cp package.json dist/
      - cp yarn.lock dist/
      - cp LICENSE dist/
      - cp .sequelizerc dist/
      - cp docker-entry.sh dist/
      - cp migrate.sh dist/
      - cp -r migrations dist/
  dbuild:
    cmds:
      - task: build
      - docker build --platform linux/amd64 --tag {{.IMAGEWITHVERSION}} .
      - docker tag {{.IMAGEWITHVERSION}} {{.IMAGEWITHMINORVERSION}}
      - docker tag {{.IMAGEWITHMINORVERSION}} {{.IMAGEWITHREVERSION}}
      - docker tag {{.IMAGEWITHREVERSION}} {{.IMAGELATEST}}
  release:
    cmds:
      - task: dbuild
      - docker push {{.IMAGEWITHVERSION}}
      - docker push {{.IMAGEWITHMINORVERSION}}
      - docker push {{.IMAGEWITHREVERSION}}
      - docker push {{.IMAGELATEST}}
